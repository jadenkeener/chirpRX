options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: LocalChirp
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: LocalChirp
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 16.0]
    rotation: 0
    state: enabled

blocks:
- name: decimation
  id: variable
  parameters:
    comment: ''
    value: '6000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 28.0]
    rotation: 0
    state: enabled
- name: fftsz
  id: variable
  parameters:
    comment: ''
    value: '4096'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 28.0]
    rotation: 0
    state: enabled
- name: filt_cutoff
  id: variable
  parameters:
    comment: ''
    value: samp_rate/decimation*0.8
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 36.0]
    rotation: 0
    state: enabled
- name: filt_transwidth
  id: variable
  parameters:
    comment: ''
    value: (samp_rate/decimation - filt_cutoff) *2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 36.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 200e6/16
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 28.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: ./LCgram4_220.chirp
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2256, 404.0]
    rotation: 0
    state: true
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: /home/chirp/Desktop/GQRX_Recordings/gqrx_20230411_001102_14250000_12500000_fc.raw
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 276.0]
    rotation: 0
    state: true
- name: blocks_multiply_conjugate_cc_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1392, 300.0]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 308.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nLocal Chirp\nBy Jaden Keener, Last updated 3/27/23\n\n\
      Generates a local tone that sweeps the spectrum at the specified slope\n\n\"\
      \"\"\n\nimport numpy as np\nimport pmt\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):\
      \  \n\n    def __init__(self, slope=100e3, samp_rate=200e6/12, offset = 10e3):\n\
      \        gr.sync_block.__init__(\n            self,\n            name='Local\
      \ Chirp Test 1.0',   \n            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n\
      \        )\n\n        self.slope = slope  \n        self.fs = samp_rate\n  \
      \      self.offset = offset\n        self.debug = False\n        \n        self.lastT\
      \ = 0\n        self.lastF = -self.fs/2 + self.offset\n        self.spanF = self.lastF\
      \ + self.fs/2 - self.offset\n        self.dt = 1/self.fs\n        self.df =\
      \ self.slope/self.fs/2 #why /2 ?? I have no idea, but it has to be\n       \
      \ # over 2 has something to do with span of f not being -fs/2 to fs/2 but\n\
      \        # just fs..???\n        \n        \n        self.controlPortName =\
      \ 'controlIn'\n        self.message_port_register_in(pmt.intern(self.controlPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.controlPortName), self.handle_msg)\n\
      \        self.control = False\n        \n            \n        \n    def handle_msg(self,\
      \ msg):\n        controlIn = pmt.to_bool(msg)\n        \n        if controlIn\
      \ > self.controlLast+self.trigger_Power:\n            self.control = True\n\
      \        \n        self.controlLast = controlIn\n        \n    def work(self,\
      \ input_items, output_items):\n    \n        # Find number of samples on this\
      \ call\n        n = len(input_items[0]) \n\n        # If we havent progged the\
      \ whole spectrum\n        if self.lastF <= self.offset/2: # WHY OFFSET/2 ???????????\
      \ IDK\n        \n            # Calculate the values of T and F we prog to on\
      \ this call\n            newT = self.dt*n + self.lastT\n            newF = self.df*n\
      \ + self.lastF\n            \n            # Make sure arrays are correct size.\
      \ Can get slightly offsize due\n            # to float precision errors\n  \
      \          t = np.resize(np.arange(self.lastT, newT, self.dt), n)\n        \
      \    f = np.resize(np.arange(self.lastF, newF, self.df), n)\n            \n\
      \            # Output is a complex exponential (I/Q)\n            output_items[0][:]\
      \ = np.exp(1j*2*np.pi*f*t)\n            \n            # Update bookmarks\n \
      \           self.lastT = newT\n            self.lastF = newF\n        \n   \
      \     # Otherwise do nothing\n        else:\n            output_items[0][:]\
      \ = input_items[0] * 0;\n            if self.debug:\n                self.debug\
      \ = False\n                raise ValueError(self.lastF)\n            \n    \
      \    \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: 433.8e3
    samp_rate: samp_rate
    slope: 100e3
  states:
    _io_cache: ('Local Chirp Test 1.0', 'blk', [('slope', '100000.0'), ('samp_rate',
      '16666666.666666666'), ('offset', '10000.0')], [('0', 'complex', 1), ('controlIn',
      'message', 1)], [('0', 'complex', 1)], '', ['offset', 'slope'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 160.0]
    rotation: 0
    state: enabled
- name: filter_fft_low_pass_filter_0
  id: filter_fft_low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: filt_cutoff
    decim: decimation
    gain: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '8'
    samp_rate: samp_rate
    type: ccc
    width: filt_transwidth
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 484.0]
    rotation: 0
    state: enabled
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: '0'
    fftsize: fftsz
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Raw Rec"'
    plotconst: 'False'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'True'
    type: complex
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 636.0]
    rotation: 0
    state: disabled
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Raw"'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.1'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 164.0]
    rotation: 0
    state: disabled
- name: qtgui_waterfall_sink_x_1
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate/decimation
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'True'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Filtered"'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: decimation/samp_rate/1024
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2240, 524.0]
    rotation: 0
    state: enabled

connections:
- [blocks_file_source_0, '0', blocks_throttle_0, '0']
- [blocks_multiply_conjugate_cc_0, '0', filter_fft_low_pass_filter_0, '0']
- [blocks_multiply_conjugate_cc_0, '0', qtgui_waterfall_sink_x_0, '0']
- [blocks_throttle_0, '0', blocks_multiply_conjugate_cc_0, '1']
- [blocks_throttle_0, '0', epy_block_1, '0']
- [blocks_throttle_0, '0', qtgui_sink_x_0, '0']
- [epy_block_1, '0', blocks_multiply_conjugate_cc_0, '0']
- [filter_fft_low_pass_filter_0, '0', blocks_file_sink_0, '0']
- [filter_fft_low_pass_filter_0, '0', qtgui_waterfall_sink_x_1, '0']

metadata:
  file_format: 1
